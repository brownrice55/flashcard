(()=>{const t={methods:{alerts(){for(let t=0;t<4;++t)this.alert[t]=this.input[t]?"":"入力してください。"}}},e={methods:{getNow(){let t=new Date;return t.getFullYear()+"/"+(t.getMonth()+1)+"/"+t.getDate()+" "+t.getHours()+":"+t.getMinutes()}}};Vue.createApp({data:()=>({current:"memorize",pages:{memorize:"単語を覚える",register:"単語を登録する"},getAllWords:[],isNowPlaying:!1}),provide(){return{getAllWords:Vue.computed((()=>this.getAllWords)),isNowPlaying:Vue.computed((()=>this.isNowPlaying)),updateIsNowPlaying:this.updateIsNowPlaying}},methods:{onClick(t){this.current=t},updateIsNowPlaying(){this.isNowPlaying=!this.isNowPlaying}},computed:{currentPage(){return`page-${this.current}`}},created(){let t=JSON.parse(localStorage.getItem("allWords"))||[];t.length<10&&(this.current="register"),t.forEach(((t,e)=>t[5]=e)),localStorage.setItem("allWords",JSON.stringify(t)),this.getAllWords=t}}).component("page-memorize",{data:()=>({name:""}),template:"<div>\n    <h2>単語を覚える</h2>\n    <p>単語を１０個覚えましょう。</p>\n    <memorize-vocabulary></memorize-vocabulary>\n    </div>"}).component("memorize-vocabulary",{inject:["getAllWords","isNowPlaying","updateIsNowPlaying"],data(){return{isAuto:!1,isManual:!1,random10WordsIndex:[],displayWords:"",intervalTimerArray:[],countUp:0,num:{speed:0,order:0,stopped:0},label:{speed:["少し遅め","少し速め"],order:["単語→意味","意味→単語"],stopped:["停止する","再開する"]},index:{speed:[0,1],order:[0,1],stopped:[0,1]},autoSpeed:[[3,7,11,15],[2,4,6,8]],randomNo:0,alreadyMemorized10Words:[],isComplete:!1,allWords:this.getAllWords,isStopped:!1,isQuestion:!0,isCorrectArray:[],manualIndex:{cnt:0,cnt2:0},judgeCorrectIndex:t=>t?1:0,percent:100,isCorrectLabel:{text:["誤","正"],class:["complete__icon--again","complete__icon--ok"]},manualOrder:0,manualOrderIndexArray:[[0,1,2,3],[1,0,3,2]],isUnselected:!0,questionWord:"",questionWordArray:["単語","文章"]}},mounted(){this.getRandom10WordsIndex()},template:'\n      <div class="displayWords" v-if="isAuto">\n        <template v-if="isComplete">\n          <p>単語を全て覚えました。覚えた単語は下記です。</p>\n          <ul>\n            <li v-for="word in alreadyMemorized10Words">{{ word[0] }} - {{ word[1] }}</li>\n          </ul>\n        </template>\n        <template v-else>\n          <div class="displayWords__smallBtn">\n            <small>現在の表示順：{{ label.order[index.order[0]] }}</small>　<button @click="onReverse">{{ label.order[index.order[1]] }}に変更</button><br />\n            <small>現在の速度：{{ label.speed[index.speed[0]] }}</small>   <button @click="onChangeSpeed">{{ label.speed[index.speed[1]] }}に変更</button>\n          </div>\n          <p class="displayWords__word">\n            {{ displayWords }}\n          </p>\n          <div class="displayWords__btn">\n            <template v-if="isAuto">\n              <template v-if="isStopped">\n                <p><small>停止中</small></p>\n              </template>\n              <button @click="onAlreadyMemorized" :disabled="isStopped">もう覚えた</button>\n              <button @click="onStop">{{ label.stopped[index.stopped[0]] }}</button>\n              <p><small>再生中の単語を覚えたと思ったら、「もう覚えた」ボタンを押してね。</small></p>\n              <p><small>覚えた単語 {{ alreadyMemorized10Words.length }}/10個</small></p>\n            </template>\n          </div>\n        </template>\n      </div>\n      <div v-if="isManual">\n        <template v-if="isComplete">\n          <p>正答率 {{ percent }}%</p>\n          <ul>\n            <li v-for="(word, index) in random10WordsIndex" :key="word">\n              <p><span class="complete__icon" :class="isCorrectLabel.class[judgeCorrectIndex(isCorrectArray[index*2])]">{{ isCorrectLabel.text[judgeCorrectIndex(isCorrectArray[index*2])] }}</span>　{{ allWords[word][0] }} - {{ allWords[word][1] }}</p>\n              <p><span class="complete__icon" :class="isCorrectLabel.class[judgeCorrectIndex(isCorrectArray[index*2+1])]">{{ isCorrectLabel.text[judgeCorrectIndex(isCorrectArray[index*2+1])] }}</span>　{{ allWords[word][2] }} - {{ allWords[word][3] }}</p>\n            </li>\n          </ul>\n        </template>\n        <template v-else>\n          <div class="displayWords__btn" v-if="isUnselected">\n            <button @click="onSelectOrder(true)">単語の意味を覚えたかテスト<br />単語→意味の順番</button>\n            <button @click="onSelectOrder(false)">意味から単語が分かるかテスト<br />意味→単語の順番</button>\n          </div>\n          <div class="displayWords" v-else>\n            <p v-if="isQuestion">下記の<template v-if="this.manualOrder">意味の</template>{{ questionWord }}<template v-if="!this.manualOrder">の意味</template>を思い浮かべてから、「次へ」を押してください。</p>\n            <p v-else>正解の時は「正解」を、間違っていたら「不正解」を押してください。</p>\n            <p class="displayWords__word">\n              {{ displayWords }}\n            </p>\n            <div v-if="isQuestion" class="displayWords__btn">\n              <button @click="onNext">次へ</button>\n            </div>\n            <div v-else class="displayWords__btn">\n              <button @click="onJudge(true)">正解</button>\n              <button @click="onJudge(false)">不正解</button>\n            </div>\n          </div>\n        </template>\n      </div>\n      <template v-if="isComplete">\n        <div class="displayWords__commonBtn">\n          <button @click="onPlayAgain">もう一度チャレンジする</button>\n        </div>\n      </template>\n      <template v-else>\n        <div class="displayWords__commonBtn" v-if="!isAuto && !isManual">\n          <button @click="onAutoPlay">自動再生</button>\n          <button @click="onManualPlay">テスト形式</button>\n        </div>\n        <div class="displayWords__commonBtn" v-else>\n          <button @click="onPlayAgain">最初からやり直す</button>\n        </div>\n      </template>\n    ',methods:{onAutoPlay(){this.isAuto=!0,this.isManual=!1,this.countUp=0,this.randomNo=this.getRandomIndex(),this.displayWords=this.allWords[this.random10WordsIndex[this.randomNo]][0],this.updateIsNowPlaying(),this.autoPlay()},autoPlay(){this.intervalTimerArray.push(setInterval(function(){++this.countUp,this.displayWords=this.getWord(this.autoSpeed[this.index.speed[0]],this.allWords[this.random10WordsIndex[this.randomNo]])}.bind(this),1e3))},getWord(t,e){return this.countUp<t[0]?this.index.order[0]?e[1]:e[0]:this.countUp<t[1]?this.index.order[0]?e[0]:e[1]:this.countUp<t[2]?this.index.order[0]?e[3]:e[2]:this.countUp<t[3]?this.index.order[0]?e[2]:e[3]:(this.randomNo=this.getRandomIndex(),this.countUp=0,this.index.order[0]?this.allWords[this.random10WordsIndex[this.randomNo]][1]:this.allWords[this.random10WordsIndex[this.randomNo]][0])},onStop(){this.index.stopped=[this.num.stopped=1-this.num.stopped,1-this.num.stopped],this.isStopped=this.index.stopped[0],this.isStopped&&this.intervalTimerArray.length>0&&clearInterval(this.intervalTimerArray.shift()),this.isStopped||this.autoPlay()},getRandomIndex(){return parseInt(Math.random()*this.random10WordsIndex.length)},onChangeSpeed(){this.index.speed=[this.num.speed=1-this.num.speed,1-this.num.speed]},onReverse(){this.index.order=[this.num.order=1-this.num.order,1-this.num.order]},onAlreadyMemorized(){clearInterval(this.intervalTimerArray.shift()),this.allWords[this.random10WordsIndex[this.randomNo]][4]=this.getNow(),localStorage.setItem("allWords",JSON.stringify(this.allWords)),this.alreadyMemorized10Words.push(this.allWords[this.random10WordsIndex[this.randomNo]]),this.random10WordsIndex.splice(this.randomNo,1),this.random10WordsIndex.length?(this.countUp=0,this.onAutoPlay()):this.isComplete=!0},onPlayAgain(){this.isComplete=!1,this.isAuto=!1,this.isManual=!1,this.isUnselected=!0,this.alreadyMemorized10Words=[],this.getRandom10WordsIndex(),this.updateIsNowPlaying()},onManualPlay(){this.isManual=!0,this.isAuto=!1,this.isCorrectArray=[],this.updateIsNowPlaying()},onSelectOrder(t){this.isUnselected=!1,this.manualOrder=t?0:1,this.questionWord=this.questionWordArray[0],this.displayWords=this.allWords[this.random10WordsIndex[this.manualIndex.cnt]][this.manualOrderIndexArray[this.manualOrder][this.manualIndex.cnt2]]},onNext(){++this.manualIndex.cnt2,this.isQuestion=!1,this.displayWords=this.allWords[this.random10WordsIndex[this.manualIndex.cnt]][this.manualOrderIndexArray[this.manualOrder][this.manualIndex.cnt2]]},onJudge(t){this.isCorrectArray.push(t),this.isQuestion=!0;let e=this.isCorrectArray.slice(-2);this.isCorrectArray.length%2==0&&(this.allWords[this.random10WordsIndex[this.manualIndex.cnt]][4]=e[0]&&e[1]?this.getNow():0),3===this.manualIndex.cnt2?(this.manualIndex.cnt2=0,++this.manualIndex.cnt):this.manualIndex.cnt2=2,20===this.isCorrectArray.length?(this.isComplete=!0,this.manualIndex.cnt=0,this.percent=this.isCorrectArray.filter((t=>t)).length/this.isCorrectArray.length*100,localStorage.setItem("allWords",JSON.stringify(this.allWords))):(this.displayWords=this.allWords[this.random10WordsIndex[this.manualIndex.cnt]][this.manualOrderIndexArray[this.manualOrder][this.manualIndex.cnt2]],this.questionWord=this.manualIndex.cnt2?this.questionWordArray[1]:this.questionWordArray[0])},getRandom10WordsIndex(){let t=0,e=[],s=this.allWords.filter((t=>t[4])),i=this.allWords.filter((t=>!t[4]));if(i.length<10){s.sort((function(t,e){return t[4]>e[4]?1:-1}));let t=10-i.length;e=i.concat(s.slice(0,t))}else for(let s=0,d=i.length;s<10;++s,--d)t=Math.floor(Math.random()*d),e.push(i.splice(t,1)[0]);let d=e.map((t=>t[5]));this.random10WordsIndex=d}},mixins:[e]}).component("page-register",{data(){return{name:"",isNotEdit:!0,editIndex:this.editIndex}},provide(){return{isNotEdit:this.isNotEdit}},template:'\n    <div v-if="isNotEdit">\n      <h2>単語を登録する</h2>\n      <register-new></register-new>\n      <register-list @judgeIsNotEdit="judgeIsNotEdit"></register-list>\n    </div>\n    <div v-else>\n      <list-edit @judgeIsNotEdit="judgeIsNotEdit" :editIndex="editIndex"></list-edit>\n    </div>\n    ',methods:{judgeIsNotEdit(t){this.isNotEdit=!this.isNotEdit,this.editIndex=t}}}).component("register-new",{inject:["getAllWords"],data(){return{input:["","","",""],alert:["","","",""],isDisabled:!0,isAdded:!1,allWords:this.getAllWords,wordList:"#wordList"}},template:'<div id="top">\n      <div class="btn--right"><button v-scroll-to="wordList">登録済みの<br />単語リスト</button></div>\n      <h3>新規登録</h3>\n      <dl class="form">\n        <dt>単語<small class="required">※必須 {{ alert[0] }}</small></dt>\n        <dd><input type="text" size="30" v-model="input[0]" /><br /><small>例）apple</small></dd>\n        <dt>単語の意味<small class="required">※必須 {{ alert[1] }}</small></dt>\n        <dd><input type="text" size="30" v-model="input[1]" /><br /><small>例）りんご</small></dd>\n        <dt>例文<small class="required">※必須 {{ alert[2] }}</small></dt>\n        <dd><textarea cols="30" rows="5" v-model="input[2]"></textarea><br><small>例）I like apples.</small></dd>\n        <dt>例文の意味<small class="required">※必須 {{ alert[3] }}</small></dt>\n        <dd><textarea cols="30" rows="5" v-model="input[3]"></textarea><br><small>例）私はりんごが好きです。</small></dd>\n      </dl>\n      <div class="displayWords__btn">\n        <button @click="onRegister" :disabled="isDisabled">単語を登録する</button>\n      </div>\n    </div>',watch:{input:{handler(t){this.isDisabled=!this.input.every((t=>t.length>0)),this.isAdded?this.isAdded=!1:this.alerts()},deep:!0}},methods:{onRegister(){this.input[4]=0,this.input[5]="",this.allWords.push(this.input),localStorage.setItem("allWords",JSON.stringify(this.allWords)),this.input=["","","",""],this.isAdded=!0}},mixins:[t]}).component("register-list",{inject:["getAllWords"],emits:["judgeIsNotEdit"],data(){return{allWords:this.getAllWords,top:"#top"}},template:'<div v-if="allWords.length>=10" id="wordList">\n      <h3>まだ覚えていない単語</h3>\n      <ul class="list">\n        <template v-for="(word, index) in allWords" :key="word">\n        <li v-if="!word[4]" @click="onEdit(index)">{{ word[0] }}</li>\n        </template>\n      </ul>\n      <h3>既に覚えた単語</h3>\n      <ul class="list">\n        <template v-for="(word, index) in allWords" :key="word">\n        <li v-if="word[4]" @click="onEdit(index)">{{ word[0] }}</li>\n        </template>\n      </ul>\n      <div class="btn--right"><button v-scroll-to="top">ページトップへ</button></div>\n    </div>',methods:{onEdit(t){this.$emit("judgeIsNotEdit",t)}}}).component("list-edit",{inject:["getAllWords"],props:["editIndex"],emits:["judgeIsNotEdit"],data(){return{allWords:this.getAllWords,hasAlreadyMemorized:!1,registerDate:0,isDisabled:!0,alert:["","","",""],isAuto:this.isAuto,input:[]}},template:'<div>\n      <h3>単語の編集</h3>\n      <dl class="form">\n        <dt>単語<small class="required">※必須 {{ alert[0] }}</small></dt>\n        <dd><input type="text" size="30" v-model="input[0]" /><br /><small>例）apple</small></dd>\n        <dt>単語の意味<small class="required">※必須 {{ alert[1] }}</small></dt>\n        <dd><input type="text" size="30" v-model="input[1]" /><br /><small>例）りんご</small></dd>\n        <dt>例文<small class="required">※必須 {{ alert[2] }}</small></dt>\n        <dd><textarea cols="40" rows="5" v-model="input[2]"></textarea><br><small>例）I like apples.</small></dd>\n        <dt>例文の意味<small class="required">※必須 {{ alert[3] }}</small></dt>\n        <dd><textarea cols="40" rows="5" v-model="input[3]"></textarea><br><small>例）私はりんごが好きです。</small></dd>\n        <dt></dt>\n        <dd>\n          <label><input type="checkbox" v-model="hasAlreadyMemorized" @change="onChangeCheck" />この単語を覚えた</label>\n          <template v-if="hasAlreadyMemorized">（{{ registerDate }}）</template>\n        </dd>\n      </dl>\n      <div class="displayWords__btn">\n        <button @click="onChange(editIndex)" :disabled="isDisabled">変更を保存する</button>\n        <button @click="onUnchange()">変更をキャンセルする</button><br />\n        <button @click="onDelete(editIndex)">この単語を削除する</button>\n      </div>\n    </div>',watch:{input:{handler(){this.judgeDisabled(),this.alerts()},deep:!0}},methods:{onChangeCheck(){this.registerDate=this.hasAlreadyMemorized?this.getNow():this.allWords[this.editIndex][4],this.judgeDisabled()},onChange(t){let e=this.hasAlreadyMemorized?this.registerDate:0,s=this.input.concat([e,this.allWords[t][5]]);this.allWords.splice(t,1,s),localStorage.setItem("allWords",JSON.stringify(this.allWords)),this.$emit("judgeIsNotEdit")},onUnchange(){this.$emit("judgeIsNotEdit")},onDelete(t){this.allWords.splice(t,1),localStorage.setItem("allWords",JSON.stringify(this.allWords)),this.$emit("judgeIsNotEdit")},judgeDisabled(){let t=this.hasAlreadyMemorized?this.registerDate:0,e=this.input.concat([t,this.allWords[this.editIndex][5]]).toString()!==this.allWords[this.editIndex].toString();this.isDisabled=!e&&Boolean(this.allWords[this.editIndex][4])===this.hasAlreadyMemorized}},mounted(){this.hasAlreadyMemorized=!!this.allWords[this.editIndex][4],this.registerDate=this.allWords[this.editIndex][4]?this.allWords[this.editIndex][4]:0,this.input=this.allWords[this.editIndex].slice(0,4)},mixins:[t,e]}).use(VueScrollTo).mount(".v-container")})();